/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DataLiquidityPoolImplementation,
  DataLiquidityPoolImplementationInterface,
} from "../../dlp/DataLiquidityPoolImplementation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "FileAlreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAttestator",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "FileInvalidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFileRewardFactor",
        type: "uint256",
      },
    ],
    name: "FileRewardFactorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "FileValidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newMasterKey",
        type: "string",
      },
    ],
    name: "MasterKeyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newProofInstruction",
        type: "string",
      },
    ],
    name: "ProofInstructionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proofIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "RewardRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contributorsRewardAmount",
        type: "uint256",
      },
    ],
    name: "addRewardsForContributors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "contributorFiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proofIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPool.FileResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
    ],
    name: "contributorInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "filesListCount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPool.ContributorInfoResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "contributors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "filesListCount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPool.ContributorInfoResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contributorsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dataRegistry",
    outputs: [
      {
        internalType: "contract IDataRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fileRewardFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "files",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proofIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPool.FileResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "filesListAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "filesListCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "dataRegistryAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "teePoolAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "publicKey",
            type: "string",
          },
          {
            internalType: "string",
            name: "proofInstruction",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileRewardFactor",
            type: "uint256",
          },
        ],
        internalType: "struct DataLiquidityPoolImplementation.InitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofInstruction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proofIndex",
        type: "uint256",
      },
    ],
    name: "requestReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "teePool",
    outputs: [
      {
        internalType: "contract ITeePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalContributorsRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFileRewardFactor",
        type: "uint256",
      },
    ],
    name: "updateFileRewardFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newMasterKey",
        type: "string",
      },
    ],
    name: "updateMasterKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newProofInstruction",
        type: "string",
      },
    ],
    name: "updateProofInstruction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTeePool",
        type: "address",
      },
    ],
    name: "updateTeePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60805161290162000104600039600081816113f10152818161141a01526115f801526129016000f3fe6080604052600436106102045760003560e01c80637569b3d711610118578063ac9650d8116100a0578063d503d4e41161006f578063d503d4e4146105e7578063e30c397814610607578063f2fde38b1461061c578063f4c714b41461063c578063fc0c546a1461065c57600080fd5b8063ac9650d814610520578063ad3cb1cc1461054d578063b3aa4e7b1461057e578063c41d3b63146105d157600080fd5b80638456cb59116100e75780638456cb59146104935780638afe35b9146104a85780638da5cb5b146104bd578063a39c1d6b146104ea578063ab049ffd1461050a57600080fd5b80637569b3d71461043357806379ba5097146104495780637ba24aa51461045e5780637ccf35a61461047e57600080fd5b80634b545f3a1161019b57806352d1902d1161016a57806352d1902d146103a557806354fd4d50146103ba5780635c975abb146103ce57806362baff9f146103fe578063715018a61461041e57600080fd5b80634b545f3a146103325780634f1ef286146103525780634f33f79d146103655780635062bc5a1461038557600080fd5b80633b3cd378116101d75780633b3cd3781461028b5780633cb5d100146102b95780633f4ba83a146102fd5780633f76c7cb1461031257600080fd5b806306fdde0314610209578063084a09da146102345780631201c547146102495780631a8bcb1d1461026b575b600080fd5b34801561021557600080fd5b5061021e61067c565b60405161022b9190611d13565b60405180910390f35b34801561024057600080fd5b5061021e61070a565b34801561025557600080fd5b50610269610264366004611d26565b610717565b005b34801561027757600080fd5b50610269610286366004611d26565b610766565b34801561029757600080fd5b506102ab6102a6366004611d26565b6107aa565b60405190815260200161022b565b3480156102c557600080fd5b506102d96102d4366004611d26565b6107bd565b6040805182516001600160a01b03168152602092830151928101929092520161022b565b34801561030957600080fd5b506102696107f2565b34801561031e57600080fd5b5061026961032d366004611e9c565b610804565b34801561033e57600080fd5b506102d961034d366004611fa2565b6109c0565b610269610360366004611fbf565b610a0f565b34801561037157600080fd5b50610269610380366004611fa2565b610a2e565b34801561039157600080fd5b506102696103a0366004612022565b610a58565b3480156103b157600080fd5b506102ab610e5e565b3480156103c657600080fd5b5060016102ab565b3480156103da57600080fd5b5060008051602061288c8339815191525460ff16604051901515815260200161022b565b34801561040a57600080fd5b50610269610419366004612044565b610e7b565b34801561042a57600080fd5b50610269610ece565b34801561043f57600080fd5b506102ab600a5481565b34801561045557600080fd5b50610269610ee0565b34801561046a57600080fd5b50610269610479366004612044565b610f2a565b34801561048a57600080fd5b506102ab610f71565b34801561049f57600080fd5b50610269610f82565b3480156104b457600080fd5b5061021e610f92565b3480156104c957600080fd5b506104d2610f9f565b6040516001600160a01b03909116815260200161022b565b3480156104f657600080fd5b506001546104d2906001600160a01b031681565b34801561051657600080fd5b506102ab60065481565b34801561052c57600080fd5b5061054061053b3660046120b5565b610fd4565b60405161022b9190612117565b34801561055957600080fd5b5061021e604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561058a57600080fd5b5061059e61059936600461217b565b6110bb565b60405161022b91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b3480156105dd57600080fd5b506102ab60055481565b3480156105f357600080fd5b50600d546104d2906001600160a01b031681565b34801561061357600080fd5b506104d2611113565b34801561062857600080fd5b50610269610637366004611fa2565b61113c565b34801561064857600080fd5b5061059e610657366004611d26565b6111c1565b34801561066857600080fd5b506002546104d2906001600160a01b031681565b60008054610689906121a7565b80601f01602080910402602001604051908101604052809291908181526020018280546106b5906121a7565b80156107025780601f106106d757610100808354040283529160200191610702565b820191906000526020600020905b8154815290600101906020018083116106e557829003601f168201915b505050505081565b60048054610689906121a7565b61071f61122b565b600254610737906001600160a01b0316333084611263565b806005600082825461074991906121f7565b909155505060016000805160206128ac8339815191525550565b50565b61076e6112e4565b60068190556040518181527f49713882dce7cebaf1e95b21d928f97374855c5adfabf73652b8230de06e4779906020015b60405180910390a150565b60006107b7600883611316565b92915050565b60408051808201909152600080825260208201526000828152600b60205260409020546107b7906001600160a01b03166109c0565b6107fa6112e4565b610802611322565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156108495750825b90506000826001600160401b031660011480156108655750303b155b905081158015610873575080155b156108915760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156108bb57845460ff60401b1916600160401b1785555b6108c361137c565b6108cb61137c565b6108d3611384565b6108db611394565b60808601516000906108ed9082612252565b506040860151600180546001600160a01b039283166001600160a01b0319918216179091556020880151600280549184169183169190911790556060880151600d805491909316911617905560a086015160039061094b9082612252565b5060c086015160049061095e9082612252565b5060e08601516006558551610972906113a4565b83156109b857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b60408051808201909152600080825260208201526040805180820182526001600160a01b0384168082526000908152600c60209081529290209091820190610a07906113dc565b905292915050565b610a176113e6565b610a208261148b565b610a2a8282611493565b5050565b610a366112e4565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b610a60611555565b610a6861122b565b60015460405163dbda68db60e01b815260048101849052602481018390526000916001600160a01b03169063dbda68db90604401600060405180830381865afa158015610ab9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ae19190810190612361565b90506004604051610af2919061248f565b60405180910390208160200151608001518051906020012014610b28576040516309bde33960e01b815260040160405180910390fd5b6000838152600760205260409020600281015415610b5957604051631441154d60e31b815260040160405180910390fd5b600154604051633d31c52d60e21b8152600481018690526000916001600160a01b03169063f4c714b490602401600060405180830381865afa158015610ba3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bcb9190810190612505565b6040808201516020808701518051818301518286015160608401516080909401519651979850600097610c06979395929491939192016125b1565b6040516020818303038152906040528051906020012090506000610c658560000151610c5f847f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b90611586565b600d54604051630a7016f760e41b81526001600160a01b03808416600483015292935091169063a7016f7090602401602060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612620565b610cf2576040516348614b9f60e11b815260040160405180910390fd5b42845560018401869055602085015151600654670de0b6b3a764000091610d1891612642565b610d229190612659565b6002850155610d326008886115b0565b506020808401516001600160a01b03166000908152600c90915260409020610d5a81896115b0565b5060208401516002808701549054610d7d926001600160a01b03909116916115bc565b846002015460056000828254610d93919061267b565b90915550610da29050816113dc565b600103610df457600a8054906000610db98361268e565b9091555050602084810151600a546000908152600b909252604090912080546001600160a01b0319166001600160a01b039092169190911790555b868885602001516001600160a01b03167fc79b2d4186d26cf06f3e1a252e47fb477392229c39da486f16d9285961fdd9fe8860020154604051610e3991815260200190565b60405180910390a4505050505050610a2a60016000805160206128ac83398151915255565b6000610e686115ed565b5060008051602061286c83398151915290565b610e836112e4565b6003610e908284836126a7565b507fcf6a9cc9de7d6a2f9488bac950d70cd0eff6bd12d21289198406960d6003de218282604051610ec2929190612767565b60405180910390a15050565b610ed66112e4565b61080260006113a4565b3380610eea611113565b6001600160a01b031614610f215760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b610763816113a4565b610f326112e4565b6004610f3f8284836126a7565b507fba416802d8f8c88a69872ea24a6897e9c3b8bdf72487c62ab999954782a877318282604051610ec2929190612767565b6000610f7d60086113dc565b905090565b610f8a6112e4565b610802611636565b60038054610689906121a7565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b604080516000815260208101909152606090826001600160401b03811115610ffe57610ffe611d3f565b60405190808252806020026020018201604052801561103157816020015b606081526020019060019003908161101c5790505b50915060005b838110156110b35761108e3086868481811061105557611055612796565b905060200281019061106791906127ac565b8560405160200161107a939291906127f9565b60405160208183030381529060405261167f565b8382815181106110a0576110a0612796565b6020908102919091010152600101611037565b505092915050565b6110e66040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b0383166000908152600c6020526040902061110c906106579084611316565b9392505050565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610fc4565b6111446112e4565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255611188610f9f565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6111ec6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600081815260076020908152604091829020825160808101845293845280549184019190915260018101549183019190915260020154606082015290565b6000805160206128ac83398151915280546001190161125d57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b6040516001600160a01b0384811660248301528381166044830152606482018390526112ca9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506116f5565b50505050565b60016000805160206128ac83398151915255565b336112ed610f9f565b6001600160a01b0316146108025760405163118cdaa760e01b8152336004820152602401610f18565b600061110c8383611758565b61132a611782565b60008051602061288c833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200161079f565b6108026117b2565b61138c6117b2565b6108026117fb565b61139c6117b2565b610802611803565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610a2a82611824565b60006107b7825490565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061146d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661146160008051602061286c833981519152546001600160a01b031690565b6001600160a01b031614155b156108025760405163703e46dd60e11b815260040160405180910390fd5b6107636112e4565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156114ed575060408051601f3d908101601f191682019092526114ea91810190612820565b60015b61151557604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610f18565b60008051602061286c833981519152811461154657604051632a87526960e21b815260048101829052602401610f18565b6115508383611895565b505050565b60008051602061288c8339815191525460ff16156108025760405163d93c066560e01b815260040160405180910390fd5b60008060008061159686866118eb565b9250925092506115a68282611938565b5090949350505050565b600061110c83836119f1565b6040516001600160a01b0383811660248301526044820183905261155091859182169063a9059cbb90606401611298565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108025760405163703e46dd60e11b815260040160405180910390fd5b61163e611555565b60008051602061288c833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611364565b6060600080846001600160a01b03168460405161169c9190612839565b600060405180830381855af49150503d80600081146116d7576040519150601f19603f3d011682016040523d82523d6000602084013e6116dc565b606091505b50915091506116ec858383611a40565b95945050505050565b600061170a6001600160a01b03841683611a9c565b9050805160001415801561172f57508080602001905181019061172d9190612620565b155b1561155057604051635274afe760e01b81526001600160a01b0384166004820152602401610f18565b600082600001828154811061176f5761176f612796565b9060005260206000200154905092915050565b60008051602061288c8339815191525460ff1661080257604051638dfc202b60e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661080257604051631afcd79f60e31b815260040160405180910390fd5b6112d06117b2565b61180b6117b2565b60008051602061288c833981519152805460ff19169055565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61189e82611aaa565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156118e357611550828261167f565b610a2a611b0f565b600080600083516041036119255760208401516040850151606086015160001a61191788828585611b2e565b955095509550505050611931565b50508151600091506002905b9250925092565b600082600381111561194c5761194c612855565b03611955575050565b600182600381111561196957611969612855565b036119875760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561199b5761199b612855565b036119bc5760405163fce698f760e01b815260048101829052602401610f18565b60038260038111156119d0576119d0612855565b03610a2a576040516335e2f38360e21b815260048101829052602401610f18565b6000818152600183016020526040812054611a38575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107b7565b5060006107b7565b606082611a5557611a5082611bfd565b61110c565b8151158015611a6c57506001600160a01b0384163b155b15611a9557604051639996b31560e01b81526001600160a01b0385166004820152602401610f18565b5092915050565b606061110c83836000611c26565b806001600160a01b03163b600003611ae057604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610f18565b60008051602061286c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b34156108025760405163b398979f60e01b815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611b695750600091506003905082611bf3565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611bbd573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611be957506000925060019150829050611bf3565b9250600091508190505b9450945094915050565b805115611c0d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b606081471015611c4b5760405163cd78605960e01b8152306004820152602401610f18565b600080856001600160a01b03168486604051611c679190612839565b60006040518083038185875af1925050503d8060008114611ca4576040519150601f19603f3d011682016040523d82523d6000602084013e611ca9565b606091505b5091509150611cb9868383611a40565b9695505050505050565b60005b83811015611cde578181015183820152602001611cc6565b50506000910152565b60008151808452611cff816020860160208601611cc3565b601f01601f19169290920160200192915050565b60208152600061110c6020830184611ce7565b600060208284031215611d3857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715611d7857611d78611d3f565b60405290565b604080519081016001600160401b0381118282101715611d7857611d78611d3f565b60405160a081016001600160401b0381118282101715611d7857611d78611d3f565b604051601f8201601f191681016001600160401b0381118282101715611dea57611dea611d3f565b604052919050565b6001600160a01b038116811461076357600080fd5b8035611e1281611df2565b919050565b60006001600160401b03821115611e3057611e30611d3f565b50601f01601f191660200190565b6000611e51611e4c84611e17565b611dc2565b9050828152838383011115611e6557600080fd5b828260208301376000602084830101529392505050565b600082601f830112611e8d57600080fd5b61110c83833560208501611e3e565b600060208284031215611eae57600080fd5b81356001600160401b0380821115611ec557600080fd5b908301906101008286031215611eda57600080fd5b611ee2611d55565b611eeb83611e07565b8152611ef960208401611e07565b6020820152611f0a60408401611e07565b6040820152611f1b60608401611e07565b6060820152608083013582811115611f3257600080fd5b611f3e87828601611e7c565b60808301525060a083013582811115611f5657600080fd5b611f6287828601611e7c565b60a08301525060c083013582811115611f7a57600080fd5b611f8687828601611e7c565b60c08301525060e083013560e082015280935050505092915050565b600060208284031215611fb457600080fd5b813561110c81611df2565b60008060408385031215611fd257600080fd5b8235611fdd81611df2565b915060208301356001600160401b03811115611ff857600080fd5b8301601f8101851361200957600080fd5b61201885823560208401611e3e565b9150509250929050565b6000806040838503121561203557600080fd5b50508035926020909101359150565b6000806020838503121561205757600080fd5b82356001600160401b038082111561206e57600080fd5b818501915085601f83011261208257600080fd5b81358181111561209157600080fd5b8660208285010111156120a357600080fd5b60209290920196919550909350505050565b600080602083850312156120c857600080fd5b82356001600160401b03808211156120df57600080fd5b818501915085601f8301126120f357600080fd5b81358181111561210257600080fd5b8660208260051b85010111156120a357600080fd5b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561216e57603f1988860301845261215c858351611ce7565b94509285019290850190600101612140565b5092979650505050505050565b6000806040838503121561218e57600080fd5b823561219981611df2565b946020939093013593505050565b600181811c908216806121bb57607f821691505b6020821081036121db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107b7576107b76121e1565b601f821115611550576000816000526020600020601f850160051c810160208610156122335750805b601f850160051c820191505b818110156109b85782815560010161223f565b81516001600160401b0381111561226b5761226b611d3f565b61227f8161227984546121a7565b8461220a565b602080601f8311600181146122b4576000841561229c5750858301515b600019600386901b1c1916600185901b1785556109b8565b600085815260208120601f198616915b828110156122e3578886015182559484019460019091019084016122c4565b50858210156123015787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600061231f611e4c84611e17565b905082815283838301111561233357600080fd5b61110c836020830184611cc3565b600082601f83011261235257600080fd5b61110c83835160208501612311565b6000602080838503121561237457600080fd5b82516001600160401b038082111561238b57600080fd5b908401906040828703121561239f57600080fd5b6123a7611d7e565b8251828111156123b657600080fd5b8301601f810188136123c757600080fd5b6123d5888251878401612311565b82525083830151828111156123e957600080fd5b929092019160a083880312156123fe57600080fd5b612406611da0565b83518152848401518582015260408401518381111561242457600080fd5b61243089828701612341565b60408301525060608401518381111561244857600080fd5b61245489828701612341565b60608301525060808401518381111561246c57600080fd5b61247889828701612341565b608083015250938101939093525090949350505050565b600080835461249d816121a7565b600182811680156124b557600181146124ca576124f9565b60ff19841687528215158302870194506124f9565b8760005260208060002060005b858110156124f05781548a8201529084019082016124d7565b50505082870194505b50929695505050505050565b60006020828403121561251757600080fd5b81516001600160401b038082111561252e57600080fd5b908301906080828603121561254257600080fd5b60405160808101818110838211171561255d5761255d611d3f565b60405282518152602083015161257281611df2565b602082015260408301518281111561258957600080fd5b61259587828601612341565b6040830152506060830151606082015280935050505092915050565b600087516125c3818460208c01611cc3565b808301905087815286602082015285516125e4816040840160208a01611cc3565b85519101906125fa816040840160208901611cc3565b8451910190612610816040840160208801611cc3565b0160400198975050505050505050565b60006020828403121561263257600080fd5b8151801515811461110c57600080fd5b80820281158282048414176107b7576107b76121e1565b60008261267657634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156107b7576107b76121e1565b6000600182016126a0576126a06121e1565b5060010190565b6001600160401b038311156126be576126be611d3f565b6126d2836126cc83546121a7565b8361220a565b6000601f84116001811461270657600085156126ee5750838201355b600019600387901b1c1916600186901b178355612760565b600083815260209020601f19861690835b828110156127375786850135825560209485019460019092019101612717565b50868210156127545760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126127c357600080fd5b8301803591506001600160401b038211156127dd57600080fd5b6020019150368190038213156127f257600080fd5b9250929050565b828482376000838201600081528351612816818360208801611cc3565b0195945050505050565b60006020828403121561283257600080fd5b5051919050565b6000825161284b818460208701611cc3565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220741fc4bb25d0fefd156f93cc0acac2e6ad9be549242b92faae7331372da17e1e64736f6c63430008180033";

type DataLiquidityPoolImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataLiquidityPoolImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataLiquidityPoolImplementation__factory extends ContractFactory {
  constructor(...args: DataLiquidityPoolImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataLiquidityPoolImplementation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DataLiquidityPoolImplementation__factory {
    return super.connect(runner) as DataLiquidityPoolImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataLiquidityPoolImplementationInterface {
    return new Interface(_abi) as DataLiquidityPoolImplementationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataLiquidityPoolImplementation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DataLiquidityPoolImplementation;
  }
}
